    PoliLista* P = new PoliLista();
    PoliLista* P2 = new PoliLista();
    PoliLista* P3 = new PoliLista();
    PoliLista* P4 = new PoliLista();
    //	PoliLista p;

    P->poner_termino(2, 3);
    P->poner_termino(4, 7);
    cout << "Lista 1 ";
    P->mostrar_lista();

    P2->poner_termino(5, 4);
    P2->poner_termino(2, 1);
    cout << "Lista 2 ";
    P2->mostrar_lista();

    P3 = P->suma(P, P2);
    cout << "Lista 3 ";
    P3->mostrar_lista();

    P4->poner_termino(4, 7);
    P4->poner_termino(7, 3);
    P4->poner_termino(2, 1);
    cout << "Lista 4 ";
    P4->mostrar_lista();


///////////

    /*
	PoliLista* P = new PoliLista();
	PoliLista* P2 = new PoliLista();

	// coef, exp
	//	P.poner_termino(2, 7);
    P->poner_termino(2, 3);
    P->poner_termino(4, 7);
    P->mostrar_pol();
    P->mostrar_lista();

    P2->poner_termino(2, 3);
    P2->poner_termino(4, 3);
    P2->mostrar_pol();
    P2->mostrar_lista();

    // 2(2)^4+5(2)^7+4(2)^1
    // 2x^4+5x^7+4x^1
    //	P->derivada();

    //    cout << "El polinomio de entrada es: " + P->mostrar_pol();
    char entrada;
    cout << "Quieres evaluar el polinomio? s/n";
    cin >> entrada;
    if (entrada == 115 || entrada == 83 || entrada == 10) {
        int numero;
        cout << "Introduce valor a evaluar: ";
        cin >> numero;
        cout << "El resultado del polinomio es: " << std::setprecision(10)
             << P->evaluar(numero) << endl;
    }

	P->mostrar_lista();
*/

	/*
	CSMemoria* mem = new CSMemoria();
	mem->new_espacio("hola,pepe");
	mem->poner_dato(0, "->hola", 9);
	mem->poner_dato(1, "->pepe", 10);
	cout << mem->obtenerDato(0, "hola") << endl;
	cout << mem->obtenerDato(1, "pepe") << endl;
	mem->delete_espacio(1);
	mem->mostrarMemoria();
	cout<< mem->Espacio_Disponible()<<endl;

*/

/*

	PilaL* pila = new PilaL();
	int pri=10;
	int sec=20;
	int tre=30;
	pila->meter(pri);
	pila->meter(sec);
	pila->meter(tre);
	pila->sacar(pri);
    cout<<pila->cima()<<endl;
	cout << pila->mostrarPila();

*/

/*

    VCola2* cola2 = new VCola2;

    int pri = 10;
    int sec = 20;
    int ter = 30;
	int cuar = 40;
	cola2->poner2(pri);
	cola2->poner2(sec);
	cola2->poner2(ter);
//	cola2->mostrar2();
	cola2->sacar2(ter);
//	cola2->mostrar2();
//	cola2->poner2(cuar);
	cola2->mostrar2();

//	cout<<cola2->primero2()<<endl;

*/